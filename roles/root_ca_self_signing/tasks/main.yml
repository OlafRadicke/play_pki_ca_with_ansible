---

- name: Generate an root ca private key with the default values (4096 bits, RSA)
  openssl_privatekey:
    path:                     "{{ pki_ca_dir }}/{{ root_ca.common_name }}.key.pem"

- name: Check file type
  shell: |
    file {{ pki_ca_dir }}/{{ root_ca.common_name }}.key.pem
  register:                   shell_result
  when:                       debug_output

- name: Output return value
  debug:
    msg:                      "{{ shell_result }}"
  when:                       debug_output

- name: View the content of private key
  shell: |
    openssl rsa -noout -text -in {{ pki_ca_dir }}/{{ root_ca.common_name }}.key.pem
  register:                   shell_result
  when:                       debug_output

- name: Output return value
  debug:
    msg:                      "{{ shell_result }}"
  when:                       debug_output

- name: Generate an root Certificate Signing Request
  openssl_csr:
    path:                     "{{ pki_csr_local_dir }}/{{ root_ca.common_name }}.csr"
    privatekey_path:          "{{ pki_ca_dir }}/{{ root_ca.common_name }}.key.pem"
    common_name:              "{{ root_ca.common_name }}"
    country_name:             "{{ root_ca.country_name }}"
    state_or_province_name:   "{{ root_ca.state_or_province_name }}"
    email_address:            "{{ root_ca.email_address }}"
    organization_name:        "{{ root_ca.organization_name }}"
    organizational_unit_name: "{{ root_ca.organizational_unit_name }}"
    key_usage:                "{{ root_ca.key_usage }}"

- name: Check file type
  shell: |
    file {{ pki_csr_local_dir }}/{{ root_ca.common_name }}.csr
  register:                   shell_result
  when:                       debug_output

- name: Output return value
  debug:
    msg:                      "{{ shell_result }}"
  when:                       debug_output

- name: Generate a Self Signed OpenSSL root certificate
  openssl_certificate:
    path:                     "{{ pki_httpd_dir }}/{{ root_ca.common_name }}.crt"
    csr_path:                 "{{ pki_csr_local_dir }}/{{ root_ca.common_name }}.csr"
    privatekey_path:          "{{ pki_ca_dir }}/{{ root_ca.common_name }}.key.pem"
    selfsigned_not_after:     "{{ root_ca.not_after }}"
    provider:                 "selfsigned"

- name: Check file type
  shell: |
    file {{ pki_httpd_dir }}/{{ root_ca.common_name }}.crt
  register:                   shell_result
  when:                       debug_output

- name: Output return value
  debug:
    msg:                      "{{ shell_result }}"
  when:                       debug_output

- name: Verify root Certificate
  shell: |
    openssl x509 -noout -text -in {{ pki_httpd_dir }}/{{ root_ca.common_name }}.crt
  ignore_errors: yes
  register:                   shell_result
  when:                       debug_output

- name: Output return value
  debug:
    msg:                      "{{ shell_result }}"
  when:                       debug_output

- name: Set owner of crt file
  file:
    path:                     "{{ pki_httpd_dir }}/{{ root_ca.common_name }}.crt"
    owner:                    nginx
    group:                    nginx
    mode:                     'u=rw,g=r,o=r'