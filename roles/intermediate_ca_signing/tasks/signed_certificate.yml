---

- name: Generate a ca signed certificate
  openssl_certificate:
    path:                     "{{ pki_httpd_dir }}/{{ item.key }}.crt.pem"
    csr_path:                 "{{ pki_csr_local_dir }}/{{ item.key }}.csr"
    ownca_path:               "{{ pki_ca_dir }}/{{ pki_intermediate_ca.common_name }}.crt.pem"
    ownca_privatekey_path:    "{{ pki_ca_dir }}/{{ pki_intermediate_ca.common_name }}.key.pem"
    ownca_not_after:          "{{ item.value.not_after }}"
    provider:                 ownca
  with_dict:                  "{{ pki_owner_csr }}"

- name: Check file type
  shell: |
    file {{ pki_httpd_dir }}/{{ item.key }}.crt.pem
  register:                   shell_result
  when:                       debug_output
  with_dict:                  "{{ pki_owner_csr }}"

- name: Output return value
  debug:
    msg:                      "{{ shell_result }}"
  when:                       debug_output

- name: Verify with the intermediate certificate
  shell: |
    openssl verify \
    -CAfile  {{ pki_ca_dir }}/{{ referrenc_ca_name }}.crt.pem \
     {{ pki_httpd_dir }}/{{ item.key }}.crt.pem
  with_dict:                  "{{ pki_owner_csr }}"
  ignore_errors: yes
  register:                   shell_result
  when:                       debug_output

- name: Output return value
  debug:
    msg:                      "{{ shell_result }}"
  when:                       debug_output

- name: Set owner of crt file
  file:
    path:                     "{{ pki_httpd_dir }}/{{ item.key }}.crt.pem"
    owner:                    nginx
    group:                    nginx
    mode:                     'u=rw,g=r,o=r'
  with_dict:                  "{{ pki_owner_csr }}"